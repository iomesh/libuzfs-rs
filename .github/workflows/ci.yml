name: CI

on:
  pull_request:
    branches: [ main ]

  push:
    branches: [ main ]

jobs:
  check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [nightly-2024-05-02]

    steps:
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install build-essential autoconf automake libtool gawk alien fakeroot dkms libblkid-dev
        sudo apt install uuid-dev libudev-dev libssl-dev zlib1g-dev libaio-dev libattr1-dev libelf-dev
        sudo apt install linux-headers-generic python3 python3-dev python3-setuptools python3-cffi
        sudo apt install libffi-dev python3-packaging git libcurl4-openssl-dev libtirpc-dev
    - name: Install rustfmt
      run: rustup component add rustfmt
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
    - uses: Swatinem/rust-cache@v1
    - run: cargo fmt --all -- --check
    - name: Check all targets
      run: make
    - name: Run tests
      run: make test
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
